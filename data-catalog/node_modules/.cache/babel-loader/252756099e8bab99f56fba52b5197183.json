{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { custosService } from \"./custos.util\";\nimport auth from \"../modules/auth.store\";\nimport user from \"../modules/user.store\";\nimport group from \"../modules/group.store\";\nimport tenant from \"../modules/tenant.store\";\nimport sharing from \"../modules/sharing.store\";\nimport entity from \"../modules/entity.store\";\nimport ciLogon from \"../modules/ci-logon.store\";\nimport { createLogger } from \"vuex\";\nexport function createCustosStore(vuex = Vuex, vue = Vue) {\n  vue.use(vuex);\n  const debug = process.env.NODE_ENV !== 'production';\n  const custosSessionPlugin = store => {\n    store.dispatch('auth/init');\n    custosService.identity.onChange(() => store.dispatch('auth/init'));\n  };\n  return new vuex.Store({\n    modules: {\n      auth,\n      user,\n      group,\n      tenant,\n      sharing,\n      entity,\n      ciLogon\n    },\n    strict: debug,\n    plugins: debug ? [createLogger(), custosSessionPlugin] : [custosSessionPlugin]\n  });\n}","map":{"version":3,"names":["Vue","Vuex","custosService","auth","user","group","tenant","sharing","entity","ciLogon","createLogger","createCustosStore","vuex","vue","use","debug","process","env","NODE_ENV","custosSessionPlugin","store","dispatch","identity","onChange","Store","modules","strict","plugins"],"sources":["/Users/bhavesh/Developer/SEAGrid/data-catalog/node_modules/airavata-custos-portal/src/lib/store/util/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport {custosService} from \"./custos.util\";\nimport auth from \"../modules/auth.store\";\nimport user from \"../modules/user.store\";\nimport group from \"../modules/group.store\";\nimport tenant from \"../modules/tenant.store\";\nimport sharing from \"../modules/sharing.store\";\nimport entity from \"../modules/entity.store\";\nimport ciLogon from \"../modules/ci-logon.store\";\nimport {createLogger} from \"vuex\";\n\nexport function createCustosStore(vuex = Vuex, vue = Vue) {\n    vue.use(vuex);\n\n    const debug = process.env.NODE_ENV !== 'production';\n\n    const custosSessionPlugin = store => {\n        store.dispatch('auth/init')\n        custosService.identity.onChange(() => store.dispatch('auth/init'))\n    }\n\n    return new vuex.Store({\n        modules: {\n            auth,\n            user,\n            group,\n            tenant,\n            sharing,\n            entity,\n            ciLogon\n        },\n        strict: debug,\n        plugins: debug ? [createLogger(), custosSessionPlugin] : [custosSessionPlugin],\n    })\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAAQC,aAAa,QAAO,eAAe;AAC3C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAAQC,YAAY,QAAO,MAAM;AAEjC,OAAO,SAASC,iBAAiB,CAACC,IAAI,GAAGX,IAAI,EAAEY,GAAG,GAAGb,GAAG,EAAE;EACtDa,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC;EAEb,MAAMG,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAEnD,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;IACjCA,KAAK,CAACC,QAAQ,CAAC,WAAW,CAAC;IAC3BnB,aAAa,CAACoB,QAAQ,CAACC,QAAQ,CAAC,MAAMH,KAAK,CAACC,QAAQ,CAAC,WAAW,CAAC,CAAC;EACtE,CAAC;EAED,OAAO,IAAIT,IAAI,CAACY,KAAK,CAAC;IAClBC,OAAO,EAAE;MACLtB,IAAI;MACJC,IAAI;MACJC,KAAK;MACLC,MAAM;MACNC,OAAO;MACPC,MAAM;MACNC;IACJ,CAAC;IACDiB,MAAM,EAAEX,KAAK;IACbY,OAAO,EAAEZ,KAAK,GAAG,CAACL,YAAY,EAAE,EAAES,mBAAmB,CAAC,GAAG,CAACA,mBAAmB;EACjF,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}