{"ast":null,"code":"import _defineProperty from \"/Users/bhavesh/Developer/SEAGrid/data-catalog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport CustosService from \"../index\";\nimport CustosServiceEntitiesSecretsSSH from \"./custos-service-entities-secrets-ssh\";\nimport CustosServiceEntitiesSecretsPassword from \"./custos-service-entities-secrets-password\";\nexport default class CustosServiceEntitiesSecrets {\n  /**\n   * @type {CustosService}\n   */\n\n  /**\n   * @type {CustosServiceEntitiesSecretsSSH}\n   */\n\n  /**\n   * @type {CustosServiceEntitiesSecretsPassword}\n   */\n\n  constructor(custosService) {\n    _defineProperty(this, \"_custosService\", null);\n    _defineProperty(this, \"_ssh\", null);\n    _defineProperty(this, \"_password\", null);\n    this._custosService = custosService;\n    this._ssh = new CustosServiceEntitiesSecretsSSH(this.custosService);\n    this._password = new CustosServiceEntitiesSecretsPassword(this.custosService);\n  }\n  get custosService() {\n    return this._custosService;\n  }\n  getSecretModel({\n    type\n  }) {\n    if (type === \"SSH\") {\n      return this._ssh;\n    } else if (type === \"PASSWORD\") {\n      return this._password;\n    }\n  }\n  async createSecret({\n    type,\n    clientId,\n    description,\n    ownerId,\n    password\n  }) {\n    return this.getSecretModel({\n      type\n    }).createSecret({\n      clientId,\n      description,\n      ownerId,\n      password\n    });\n  }\n  async getSecret({\n    clientId,\n    entityId\n  }) {\n    const secretMetaData = await this.getSecretMetadata({\n      clientId,\n      entityId\n    });\n    return this.getSecretModel({\n      type: secretMetaData.type\n    }).getSecret({\n      clientId,\n      entityId\n    });\n  }\n  async getSecretMetadata({\n    clientId,\n    entityId = []\n  }) {\n    const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({\n      clientId\n    });\n    const {\n      data: {\n        metadata\n      }\n    } = await axiosInstance.get(`${CustosService.ENDPOINTS.SECRETS}/secret/summaries`, {\n      params: {\n        client_id: clientId,\n        accessible_tokens: entityId\n      }\n    });\n    return metadata[0];\n  }\n}","map":{"version":3,"names":["CustosService","CustosServiceEntitiesSecretsSSH","CustosServiceEntitiesSecretsPassword","CustosServiceEntitiesSecrets","constructor","custosService","_custosService","_ssh","_password","getSecretModel","type","createSecret","clientId","description","ownerId","password","getSecret","entityId","secretMetaData","getSecretMetadata","axiosInstance","getAxiosInstanceWithClientAuthorization","data","metadata","get","ENDPOINTS","SECRETS","params","client_id","accessible_tokens"],"sources":["/Users/bhavesh/Developer/SEAGrid/data-catalog/node_modules/airavata-custos-portal/src/lib/service/custos-service/custos-service-entities/custos-service-entities-secrets.js"],"sourcesContent":["import CustosService from \"../index\";\nimport CustosServiceEntitiesSecretsSSH from \"./custos-service-entities-secrets-ssh\";\nimport CustosServiceEntitiesSecretsPassword from \"./custos-service-entities-secrets-password\";\n\nexport default class CustosServiceEntitiesSecrets {\n    /**\n     * @type {CustosService}\n     */\n    _custosService = null;\n\n    /**\n     * @type {CustosServiceEntitiesSecretsSSH}\n     */\n    _ssh = null;\n\n    /**\n     * @type {CustosServiceEntitiesSecretsPassword}\n     */\n    _password = null;\n\n    constructor(custosService) {\n        this._custosService = custosService;\n        this._ssh = new CustosServiceEntitiesSecretsSSH(this.custosService)\n        this._password = new CustosServiceEntitiesSecretsPassword(this.custosService)\n    }\n\n    get custosService() {\n        return this._custosService;\n    }\n\n    getSecretModel({type}) {\n        if (type === \"SSH\") {\n            return this._ssh;\n        } else if (type === \"PASSWORD\") {\n            return this._password;\n        }\n    }\n\n    async createSecret({type, clientId, description, ownerId, password}) {\n        return this.getSecretModel({type}).createSecret({clientId, description, ownerId, password});\n    }\n\n    async getSecret({clientId, entityId}) {\n        const secretMetaData = await this.getSecretMetadata({clientId, entityId});\n        return this.getSecretModel({type: secretMetaData.type}).getSecret({clientId, entityId});\n    }\n\n    async getSecretMetadata({clientId, entityId = []}) {\n        const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({clientId});\n        const {data: {metadata}} = await axiosInstance.get(\n            `${CustosService.ENDPOINTS.SECRETS}/secret/summaries`,\n            {\n                params: {\n                    client_id: clientId,\n                    accessible_tokens: entityId\n                }\n            }\n        );\n\n        return metadata[0];\n    }\n}\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,UAAU;AACpC,OAAOC,+BAA+B,MAAM,uCAAuC;AACnF,OAAOC,oCAAoC,MAAM,4CAA4C;AAE7F,eAAe,MAAMC,4BAA4B,CAAC;EAC9C;AACJ;AACA;;EAGI;AACJ;AACA;;EAGI;AACJ;AACA;;EAGIC,WAAW,CAACC,aAAa,EAAE;IAAA,wCAZV,IAAI;IAAA,8BAKd,IAAI;IAAA,mCAKC,IAAI;IAGZ,IAAI,CAACC,cAAc,GAAGD,aAAa;IACnC,IAAI,CAACE,IAAI,GAAG,IAAIN,+BAA+B,CAAC,IAAI,CAACI,aAAa,CAAC;IACnE,IAAI,CAACG,SAAS,GAAG,IAAIN,oCAAoC,CAAC,IAAI,CAACG,aAAa,CAAC;EACjF;EAEA,IAAIA,aAAa,GAAG;IAChB,OAAO,IAAI,CAACC,cAAc;EAC9B;EAEAG,cAAc,CAAC;IAACC;EAAI,CAAC,EAAE;IACnB,IAAIA,IAAI,KAAK,KAAK,EAAE;MAChB,OAAO,IAAI,CAACH,IAAI;IACpB,CAAC,MAAM,IAAIG,IAAI,KAAK,UAAU,EAAE;MAC5B,OAAO,IAAI,CAACF,SAAS;IACzB;EACJ;EAEA,MAAMG,YAAY,CAAC;IAACD,IAAI;IAAEE,QAAQ;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAQ,CAAC,EAAE;IACjE,OAAO,IAAI,CAACN,cAAc,CAAC;MAACC;IAAI,CAAC,CAAC,CAACC,YAAY,CAAC;MAACC,QAAQ;MAAEC,WAAW;MAAEC,OAAO;MAAEC;IAAQ,CAAC,CAAC;EAC/F;EAEA,MAAMC,SAAS,CAAC;IAACJ,QAAQ;IAAEK;EAAQ,CAAC,EAAE;IAClC,MAAMC,cAAc,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAAC;MAACP,QAAQ;MAAEK;IAAQ,CAAC,CAAC;IACzE,OAAO,IAAI,CAACR,cAAc,CAAC;MAACC,IAAI,EAAEQ,cAAc,CAACR;IAAI,CAAC,CAAC,CAACM,SAAS,CAAC;MAACJ,QAAQ;MAAEK;IAAQ,CAAC,CAAC;EAC3F;EAEA,MAAME,iBAAiB,CAAC;IAACP,QAAQ;IAAEK,QAAQ,GAAG;EAAE,CAAC,EAAE;IAC/C,MAAMG,aAAa,GAAG,MAAM,IAAI,CAACf,aAAa,CAACgB,uCAAuC,CAAC;MAACT;IAAQ,CAAC,CAAC;IAClG,MAAM;MAACU,IAAI,EAAE;QAACC;MAAQ;IAAC,CAAC,GAAG,MAAMH,aAAa,CAACI,GAAG,CAC7C,GAAExB,aAAa,CAACyB,SAAS,CAACC,OAAQ,mBAAkB,EACrD;MACIC,MAAM,EAAE;QACJC,SAAS,EAAEhB,QAAQ;QACnBiB,iBAAiB,EAAEZ;MACvB;IACJ,CAAC,CACJ;IAED,OAAOM,QAAQ,CAAC,CAAC,CAAC;EACtB;AACJ"},"metadata":{},"sourceType":"module"}