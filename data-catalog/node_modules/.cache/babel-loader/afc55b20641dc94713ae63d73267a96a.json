{"ast":null,"code":"import _defineProperty from \"/Users/bhavesh/Developer/SEAGrid/data-catalog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport CustosService from \"../index\";\nimport CustosServiceEntitiesSecrets from \"./custos-service-entities-secrets\";\nexport default class CustosEntities {\n  /**\n   * @type {CustosService}\n   */\n\n  /**\n   * @type {CustosServiceEntitiesSecrets}\n   */\n\n  constructor(custosService) {\n    _defineProperty(this, \"_custosService\", null);\n    _defineProperty(this, \"_secrets\", null);\n    this._custosService = custosService;\n    this._secrets = new CustosServiceEntitiesSecrets(this.custosService);\n  }\n  get custosService() {\n    return this._custosService;\n  }\n  get secrets() {\n    return this._secrets;\n  }\n  async createEntity({\n    clientId,\n    entityId,\n    parentId,\n    name,\n    description,\n    type,\n    ownerId,\n    fullText,\n    binaryData,\n    secretType,\n    password\n  }) {\n    if (type === \"SECRET\") {\n      entityId = await this.custosService.entities.secrets.createSecret({\n        type: secretType,\n        clientId,\n        description,\n        ownerId,\n        password\n      });\n    }\n    const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({\n      clientId\n    });\n    await axiosInstance.post(`${CustosService.ENDPOINTS.SHARING}/entity`, {\n      \"client_id\": clientId,\n      \"entity\": {\n        \"id\": entityId,\n        \"parent_id\": parentId,\n        \"name\": name,\n        \"description\": description,\n        \"type\": type,\n        \"owner_id\": ownerId,\n        \"full_text\": fullText,\n        \"binary_data\": binaryData\n      }\n    });\n    return entityId;\n  }\n  async updateEntity({\n    clientId,\n    entityId,\n    name,\n    description,\n    type,\n    ownerId,\n    fullText,\n    binaryData\n  }) {\n    const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({\n      clientId\n    });\n    return axiosInstance.put(`${CustosService.ENDPOINTS.SHARING}/entity`, {\n      \"client_id\": clientId,\n      \"entity\": {\n        \"id\": entityId,\n        \"name\": name,\n        \"description\": description,\n        \"type\": type,\n        \"owner_id\": ownerId,\n        \"full_text\": fullText,\n        \"binary_data\": binaryData\n      }\n    }).then(({\n      data: {\n        types\n      }\n    }) => types);\n  }\n  async deleteEntity({\n    clientId,\n    entityId,\n    name,\n    description,\n    type,\n    ownerId\n  }) {\n    const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({\n      clientId\n    });\n    return axiosInstance.delete(`${CustosService.ENDPOINTS.SHARING}/entity`, {\n      data: {\n        \"client_id\": clientId,\n        \"entity\": {\n          \"id\": entityId,\n          \"name\": name,\n          \"description\": description,\n          \"type\": type,\n          \"owner_id\": ownerId\n        }\n      }\n    }).then(({\n      data: {\n        types\n      }\n    }) => types);\n  }\n  async getEntities({\n    clientId,\n    ownerId\n  }) {\n    const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({\n      clientId\n    });\n    return axiosInstance.post(`${CustosService.ENDPOINTS.SHARING}/entities`, {\n      \"client_id\": clientId,\n      \"owner_id\": ownerId\n    }).then(res => {\n      return res.data.entity_array;\n    });\n  }\n  async getEntity({\n    clientId,\n    entityId\n  }) {\n    const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({\n      clientId\n    });\n    const {\n      data\n    } = await axiosInstance.get(`${CustosService.ENDPOINTS.SHARING}/entity`, {\n      params: {\n        \"entity.id\": entityId\n      }\n    });\n    if (data.type === \"SECRET\") {\n      data.metadata = await this.custosService.entities.secrets.getSecretMetadata({\n        clientId,\n        entityId: data.id\n      });\n      data.ext = await this.custosService.entities.secrets.getSecret({\n        clientId,\n        entityId: data.id\n      });\n    }\n    return data;\n  }\n}","map":{"version":3,"names":["CustosService","CustosServiceEntitiesSecrets","CustosEntities","constructor","custosService","_custosService","_secrets","secrets","createEntity","clientId","entityId","parentId","name","description","type","ownerId","fullText","binaryData","secretType","password","entities","createSecret","axiosInstance","getAxiosInstanceWithClientAuthorization","post","ENDPOINTS","SHARING","updateEntity","put","then","data","types","deleteEntity","delete","getEntities","res","entity_array","getEntity","get","params","metadata","getSecretMetadata","id","ext","getSecret"],"sources":["/Users/bhavesh/Developer/SEAGrid/data-catalog/node_modules/airavata-custos-portal/src/lib/service/custos-service/custos-service-entities/index.js"],"sourcesContent":["import CustosService from \"../index\";\nimport CustosServiceEntitiesSecrets from \"./custos-service-entities-secrets\";\n\nexport default class CustosEntities {\n    /**\n     * @type {CustosService}\n     */\n    _custosService = null;\n\n    /**\n     * @type {CustosServiceEntitiesSecrets}\n     */\n    _secrets = null;\n\n    constructor(custosService) {\n        this._custosService = custosService;\n        this._secrets = new CustosServiceEntitiesSecrets(this.custosService);\n    }\n\n    get custosService() {\n        return this._custosService;\n    }\n\n    get secrets() {\n        return this._secrets;\n    }\n\n    async createEntity({clientId, entityId, parentId, name, description, type, ownerId, fullText, binaryData, secretType, password}) {\n        if (type === \"SECRET\") {\n            entityId = await this.custosService.entities.secrets.createSecret({\n                type: secretType, clientId, description, ownerId, password\n            })\n        }\n\n        const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({clientId});\n        await axiosInstance.post(\n            `${CustosService.ENDPOINTS.SHARING}/entity`,\n            {\n                \"client_id\": clientId,\n                \"entity\": {\n                    \"id\": entityId,\n                    \"parent_id\": parentId,\n                    \"name\": name,\n                    \"description\": description,\n                    \"type\": type,\n                    \"owner_id\": ownerId,\n                    \"full_text\": fullText,\n                    \"binary_data\": binaryData\n                }\n            }\n        );\n\n        return entityId;\n    }\n\n    async updateEntity({clientId, entityId, name, description, type, ownerId, fullText, binaryData}) {\n        const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({clientId});\n        return axiosInstance.put(\n            `${CustosService.ENDPOINTS.SHARING}/entity`,\n            {\n                \"client_id\": clientId,\n                \"entity\": {\n                    \"id\": entityId,\n                    \"name\": name,\n                    \"description\": description,\n                    \"type\": type,\n                    \"owner_id\": ownerId,\n                    \"full_text\": fullText,\n                    \"binary_data\": binaryData\n                }\n            }\n        ).then(({data: {types}}) => types);\n    }\n\n    async deleteEntity({clientId, entityId, name, description, type, ownerId}) {\n        const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({clientId});\n        return axiosInstance.delete(\n            `${CustosService.ENDPOINTS.SHARING}/entity`,\n            {\n                data: {\n                    \"client_id\": clientId,\n                    \"entity\": {\n                        \"id\": entityId,\n                        \"name\": name,\n                        \"description\": description,\n                        \"type\": type,\n                        \"owner_id\": ownerId\n                    }\n                }\n            }\n        ).then(({data: {types}}) => types);\n    }\n\n    async getEntities({clientId, ownerId}) {\n        const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({clientId});\n        return axiosInstance.post(\n            `${CustosService.ENDPOINTS.SHARING}/entities`,\n            {\n                \"client_id\": clientId,\n                \"owner_id\": ownerId\n            }\n        ).then((res) => {\n            return res.data.entity_array;\n        });\n    }\n\n    async getEntity({clientId, entityId}) {\n        const axiosInstance = await this.custosService.getAxiosInstanceWithClientAuthorization({clientId});\n        const {data} = await axiosInstance.get(\n            `${CustosService.ENDPOINTS.SHARING}/entity`,\n            {\n                params: {\"entity.id\": entityId}\n            }\n        );\n        if (data.type === \"SECRET\") {\n            data.metadata = await this.custosService.entities.secrets.getSecretMetadata({clientId, entityId: data.id});\n            data.ext = await this.custosService.entities.secrets.getSecret({clientId, entityId: data.id});\n        }\n\n        return data;\n    }\n\n\n}\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,UAAU;AACpC,OAAOC,4BAA4B,MAAM,mCAAmC;AAE5E,eAAe,MAAMC,cAAc,CAAC;EAChC;AACJ;AACA;;EAGI;AACJ;AACA;;EAGIC,WAAW,CAACC,aAAa,EAAE;IAAA,wCAPV,IAAI;IAAA,kCAKV,IAAI;IAGX,IAAI,CAACC,cAAc,GAAGD,aAAa;IACnC,IAAI,CAACE,QAAQ,GAAG,IAAIL,4BAA4B,CAAC,IAAI,CAACG,aAAa,CAAC;EACxE;EAEA,IAAIA,aAAa,GAAG;IAChB,OAAO,IAAI,CAACC,cAAc;EAC9B;EAEA,IAAIE,OAAO,GAAG;IACV,OAAO,IAAI,CAACD,QAAQ;EACxB;EAEA,MAAME,YAAY,CAAC;IAACC,QAAQ;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,WAAW;IAAEC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAQ,CAAC,EAAE;IAC7H,IAAIL,IAAI,KAAK,QAAQ,EAAE;MACnBJ,QAAQ,GAAG,MAAM,IAAI,CAACN,aAAa,CAACgB,QAAQ,CAACb,OAAO,CAACc,YAAY,CAAC;QAC9DP,IAAI,EAAEI,UAAU;QAAET,QAAQ;QAAEI,WAAW;QAAEE,OAAO;QAAEI;MACtD,CAAC,CAAC;IACN;IAEA,MAAMG,aAAa,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACmB,uCAAuC,CAAC;MAACd;IAAQ,CAAC,CAAC;IAClG,MAAMa,aAAa,CAACE,IAAI,CACnB,GAAExB,aAAa,CAACyB,SAAS,CAACC,OAAQ,SAAQ,EAC3C;MACI,WAAW,EAAEjB,QAAQ;MACrB,QAAQ,EAAE;QACN,IAAI,EAAEC,QAAQ;QACd,WAAW,EAAEC,QAAQ;QACrB,MAAM,EAAEC,IAAI;QACZ,aAAa,EAAEC,WAAW;QAC1B,MAAM,EAAEC,IAAI;QACZ,UAAU,EAAEC,OAAO;QACnB,WAAW,EAAEC,QAAQ;QACrB,aAAa,EAAEC;MACnB;IACJ,CAAC,CACJ;IAED,OAAOP,QAAQ;EACnB;EAEA,MAAMiB,YAAY,CAAC;IAAClB,QAAQ;IAAEC,QAAQ;IAAEE,IAAI;IAAEC,WAAW;IAAEC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAU,CAAC,EAAE;IAC7F,MAAMK,aAAa,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACmB,uCAAuC,CAAC;MAACd;IAAQ,CAAC,CAAC;IAClG,OAAOa,aAAa,CAACM,GAAG,CACnB,GAAE5B,aAAa,CAACyB,SAAS,CAACC,OAAQ,SAAQ,EAC3C;MACI,WAAW,EAAEjB,QAAQ;MACrB,QAAQ,EAAE;QACN,IAAI,EAAEC,QAAQ;QACd,MAAM,EAAEE,IAAI;QACZ,aAAa,EAAEC,WAAW;QAC1B,MAAM,EAAEC,IAAI;QACZ,UAAU,EAAEC,OAAO;QACnB,WAAW,EAAEC,QAAQ;QACrB,aAAa,EAAEC;MACnB;IACJ,CAAC,CACJ,CAACY,IAAI,CAAC,CAAC;MAACC,IAAI,EAAE;QAACC;MAAK;IAAC,CAAC,KAAKA,KAAK,CAAC;EACtC;EAEA,MAAMC,YAAY,CAAC;IAACvB,QAAQ;IAAEC,QAAQ;IAAEE,IAAI;IAAEC,WAAW;IAAEC,IAAI;IAAEC;EAAO,CAAC,EAAE;IACvE,MAAMO,aAAa,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACmB,uCAAuC,CAAC;MAACd;IAAQ,CAAC,CAAC;IAClG,OAAOa,aAAa,CAACW,MAAM,CACtB,GAAEjC,aAAa,CAACyB,SAAS,CAACC,OAAQ,SAAQ,EAC3C;MACII,IAAI,EAAE;QACF,WAAW,EAAErB,QAAQ;QACrB,QAAQ,EAAE;UACN,IAAI,EAAEC,QAAQ;UACd,MAAM,EAAEE,IAAI;UACZ,aAAa,EAAEC,WAAW;UAC1B,MAAM,EAAEC,IAAI;UACZ,UAAU,EAAEC;QAChB;MACJ;IACJ,CAAC,CACJ,CAACc,IAAI,CAAC,CAAC;MAACC,IAAI,EAAE;QAACC;MAAK;IAAC,CAAC,KAAKA,KAAK,CAAC;EACtC;EAEA,MAAMG,WAAW,CAAC;IAACzB,QAAQ;IAAEM;EAAO,CAAC,EAAE;IACnC,MAAMO,aAAa,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACmB,uCAAuC,CAAC;MAACd;IAAQ,CAAC,CAAC;IAClG,OAAOa,aAAa,CAACE,IAAI,CACpB,GAAExB,aAAa,CAACyB,SAAS,CAACC,OAAQ,WAAU,EAC7C;MACI,WAAW,EAAEjB,QAAQ;MACrB,UAAU,EAAEM;IAChB,CAAC,CACJ,CAACc,IAAI,CAAEM,GAAG,IAAK;MACZ,OAAOA,GAAG,CAACL,IAAI,CAACM,YAAY;IAChC,CAAC,CAAC;EACN;EAEA,MAAMC,SAAS,CAAC;IAAC5B,QAAQ;IAAEC;EAAQ,CAAC,EAAE;IAClC,MAAMY,aAAa,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACmB,uCAAuC,CAAC;MAACd;IAAQ,CAAC,CAAC;IAClG,MAAM;MAACqB;IAAI,CAAC,GAAG,MAAMR,aAAa,CAACgB,GAAG,CACjC,GAAEtC,aAAa,CAACyB,SAAS,CAACC,OAAQ,SAAQ,EAC3C;MACIa,MAAM,EAAE;QAAC,WAAW,EAAE7B;MAAQ;IAClC,CAAC,CACJ;IACD,IAAIoB,IAAI,CAAChB,IAAI,KAAK,QAAQ,EAAE;MACxBgB,IAAI,CAACU,QAAQ,GAAG,MAAM,IAAI,CAACpC,aAAa,CAACgB,QAAQ,CAACb,OAAO,CAACkC,iBAAiB,CAAC;QAAChC,QAAQ;QAAEC,QAAQ,EAAEoB,IAAI,CAACY;MAAE,CAAC,CAAC;MAC1GZ,IAAI,CAACa,GAAG,GAAG,MAAM,IAAI,CAACvC,aAAa,CAACgB,QAAQ,CAACb,OAAO,CAACqC,SAAS,CAAC;QAACnC,QAAQ;QAAEC,QAAQ,EAAEoB,IAAI,CAACY;MAAE,CAAC,CAAC;IACjG;IAEA,OAAOZ,IAAI;EACf;AAGJ"},"metadata":{},"sourceType":"module"}