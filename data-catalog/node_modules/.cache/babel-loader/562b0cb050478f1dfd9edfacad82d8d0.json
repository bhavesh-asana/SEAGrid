{"ast":null,"code":"import { ciLogonService } from \"../util/ci-logon.util\";\nconst getDefaultState = () => {\n  return {\n    institutionsList: null\n  };\n};\nconst state = getDefaultState();\nconst actions = {\n  async fetchInstitutions({\n    commit\n  }) {\n    let institutionsList = await ciLogonService.getInstitutions();\n    institutionsList = institutionsList.map(({\n      DisplayName,\n      EntityID,\n      OrganizationName,\n      RandS\n    }) => {\n      return {\n        displayName: DisplayName,\n        entityId: EntityID,\n        organizationName: OrganizationName,\n        randS: RandS\n      };\n    });\n    commit(\"SET_INSTITUTIONS_LIST\", {\n      institutionsList\n    });\n  }\n};\nconst mutations = {\n  // SET_INSTITUTION(state, {displayName, entityId, organizationName, randS}) {\n  //     state.institutionsMap = {\n  //         ...state.institutionsMap,\n  //         [entityId]: {displayName, entityId, organizationName, randS}\n  //     }\n  // },\n  SET_INSTITUTIONS_LIST(state, {\n    institutionsList\n  }) {\n    state.institutionsList = institutionsList;\n  }\n};\nconst getters = {\n  // getInstitution: (state) => ({entityId}) => {\n  //     if (state.institutionsMap[entityId]) {\n  //         return state.institutionsMap[entityId];\n  //     } else {\n  //         return null;\n  //     }\n  // },\n  getInstitutions(state) {\n    return () => {\n      if (state.institutionsList) {\n        return state.institutionsList;\n      } else {\n        return null;\n      }\n    };\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["ciLogonService","getDefaultState","institutionsList","state","actions","fetchInstitutions","commit","getInstitutions","map","DisplayName","EntityID","OrganizationName","RandS","displayName","entityId","organizationName","randS","mutations","SET_INSTITUTIONS_LIST","getters","namespaced"],"sources":["/Users/bhavesh/Developer/airavata-sandbox/gsoc2022/smilesdb/data-catalog/node_modules/airavata-custos-portal/src/lib/store/modules/ci-logon.store.js"],"sourcesContent":["import {ciLogonService} from \"../util/ci-logon.util\";\n\n\nconst getDefaultState = () => {\n    return {\n        institutionsList: null\n    }\n}\n\nconst state = getDefaultState()\n\nconst actions = {\n    async fetchInstitutions({commit}) {\n        let institutionsList = await ciLogonService.getInstitutions();\n\n        institutionsList = institutionsList.map(({DisplayName, EntityID, OrganizationName, RandS}) => {\n            return {\n                displayName: DisplayName,\n                entityId: EntityID,\n                organizationName: OrganizationName,\n                randS: RandS\n            };\n        });\n\n        commit(\"SET_INSTITUTIONS_LIST\", {institutionsList})\n    }\n}\n\n\nconst mutations = {\n    // SET_INSTITUTION(state, {displayName, entityId, organizationName, randS}) {\n    //     state.institutionsMap = {\n    //         ...state.institutionsMap,\n    //         [entityId]: {displayName, entityId, organizationName, randS}\n    //     }\n    // },\n    SET_INSTITUTIONS_LIST(state, {institutionsList}) {\n        state.institutionsList = institutionsList;\n    }\n}\n\nconst getters = {\n    // getInstitution: (state) => ({entityId}) => {\n    //     if (state.institutionsMap[entityId]) {\n    //         return state.institutionsMap[entityId];\n    //     } else {\n    //         return null;\n    //     }\n    // },\n    getInstitutions(state) {\n        return () => {\n            if (state.institutionsList) {\n                return state.institutionsList;\n            } else {\n                return null;\n            }\n        }\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}"],"mappings":"AAAA,SAAQA,cAAc,QAAO,uBAAuB;AAGpD,MAAMC,eAAe,GAAG,MAAM;EAC1B,OAAO;IACHC,gBAAgB,EAAE;EACtB,CAAC;AACL,CAAC;AAED,MAAMC,KAAK,GAAGF,eAAe,EAAE;AAE/B,MAAMG,OAAO,GAAG;EACZ,MAAMC,iBAAiB,CAAC;IAACC;EAAM,CAAC,EAAE;IAC9B,IAAIJ,gBAAgB,GAAG,MAAMF,cAAc,CAACO,eAAe,EAAE;IAE7DL,gBAAgB,GAAGA,gBAAgB,CAACM,GAAG,CAAC,CAAC;MAACC,WAAW;MAAEC,QAAQ;MAAEC,gBAAgB;MAAEC;IAAK,CAAC,KAAK;MAC1F,OAAO;QACHC,WAAW,EAAEJ,WAAW;QACxBK,QAAQ,EAAEJ,QAAQ;QAClBK,gBAAgB,EAAEJ,gBAAgB;QAClCK,KAAK,EAAEJ;MACX,CAAC;IACL,CAAC,CAAC;IAEFN,MAAM,CAAC,uBAAuB,EAAE;MAACJ;IAAgB,CAAC,CAAC;EACvD;AACJ,CAAC;AAGD,MAAMe,SAAS,GAAG;EACd;EACA;EACA;EACA;EACA;EACA;EACAC,qBAAqB,CAACf,KAAK,EAAE;IAACD;EAAgB,CAAC,EAAE;IAC7CC,KAAK,CAACD,gBAAgB,GAAGA,gBAAgB;EAC7C;AACJ,CAAC;AAED,MAAMiB,OAAO,GAAG;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACAZ,eAAe,CAACJ,KAAK,EAAE;IACnB,OAAO,MAAM;MACT,IAAIA,KAAK,CAACD,gBAAgB,EAAE;QACxB,OAAOC,KAAK,CAACD,gBAAgB;MACjC,CAAC,MAAM;QACH,OAAO,IAAI;MACf;IACJ,CAAC;EACL;AACJ,CAAC;AAED,eAAe;EACXkB,UAAU,EAAE,IAAI;EAChBjB,KAAK;EACLgB,OAAO;EACPf,OAAO;EACPa;AACJ,CAAC"},"metadata":{},"sourceType":"module"}